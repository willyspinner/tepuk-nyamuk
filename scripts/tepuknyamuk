#!/usr/bin/env bash
USAGE="$(cat <<EOF
\e[1;40;39m ]Usage: tepuknyamuk (stop|start|status) [SERVICE|APPGROUP]\e[0m].
Please specify a command to manage the tepuk-nyamuk app. 
Commands:
stop : stop all services pertaining to the app.
start: start all services pertaining to the app.
status: list services and whether they are up or down.

----SERVICES----:
>> (individual service instances)  <<
redis
postgresql
gms (node)
appcs (node)
nginx

---APPGROUP----
>> (A group of service instances that comprise an app service.)  <<
gmsapp (comprises of gms service and redis)
appcsapp (comprises of appcs service and postgresql)
web (nginx)


----NOTE----:
PID files are located in ~/.tepuknyamuk for the services who need to store PID files.
EOF
)";
TITLE='\e[1;44;97mtepuknyamuk cli tool.\e[0m '
if [[ "$(uname -s)" == "Darwin" ]]; 
then echo -e "\e[1;41;97m Must be in ubuntu environment to launch tepuknyamuk live. Sorry!"
    exit 1;
fi

if [[ $# -lt 1 ]]; 
then echo -e "$TITLE";
 echo -e "$USAGE";
else
# start command
if [[ $1 == 'start' ]]; then
	case "$2" in 
		(redis)
		echo -e "\e[0;40;34m starting redis...\e[0m";
		redis-server ~/.tepuknyamuk/redis-daemon.conf && echo -e '\e[32m >>>> redis-server daemon running'
		;;
		(postgresql)
		echo -e "\e[0;40;34m starting postgresql...\e[0m";
		sudo systemctl start postgresql && echo -e '\e[32m >>>> postgresql running .'
		;;
		(gms)
		echo -e "\e[0;40;34m starting gms node service...\e[0m";
		;;
		(appcs)
		echo -e "\e[0;40;34m starting appcs node service...\e[0m";
		;;
		(nginx)
		echo -e "\e[0;40;34m starting nginx service...\e[0m";
		;;
		(*)
		echo -e "\e[0;40;34m starting services...\e[0m";
		SERVICES=0
		redis-server ~/.tepuknyamuk/redis-daemon.conf && echo -e '\e[32m >>>> redis-server daemon running' && (( SERVICES+=1 ));
		sudo systemctl start postgresql && echo -e '\e[32m >>>> postgresql running .'  && (( SERVICES+=1 ));
		forever start ~/projects/tepuk-nyamuk/gameMarshallingService/gmsapp.js production.host && echo -e '\e[32m >>>> gms daemon running..'  && (( SERVICES+=1 ));
		forever start ~/projects/tepuk-nyamuk/appCentralService/appcsapp.js production.host && echo -e '\e[32m >>>> appcs daemon running...'  && (( SERVICES+=1 ));
		sudo systemctl start nginx && echo -e '\e[32m >>>> nginx web server running....'  && (( SERVICES+=1 ));
		echo -e "\e[36m [ $SERVICES/5 services up and running.]."
		echo -e "\e[36m [serving on ec2-13-229-206-81.ap-southeast-1.compute.amazonaws.com]"
		;;
		esac

# stop command
else if [[ $1 == 'stop' ]]; 
then
	case "$2" in 
		(redis)
		echo -e "\e[0;40;34m stopping redis...\e[0m";
	[[ -a ~/.tepuknyamuk/redis-server-daemon.pid ]] && (sudo kill $(cat ~/.tepuknyamuk/redis-server-daemon.pid) && echo -e '\e[32m >>>> killed redis-server daemon' ) || echo -e '\e[31m ERROR. NO redis server pid file found. \e[0m';
		;;
		(postgresql)
		echo -e "\e[0;40;34m stopping postgresql...\e[0m";
	sudo systemctl stop postgresql && echo -e '\e[32m >>>> stopped postgresql.' 
		;;
		(apps)
		echo -e "\e[0;40;34m stopping app node services...\e[0m";
	forever stopall  && echo -e '\e[32m >>>> stopped appcs daemon...'  &&  echo -e '\e[32m >>>> stopped gms daemon...' 
		;;
		(nginx)
		echo -e "\e[0;40;34m stopping nginx service...\e[0m";
	sudo systemctl stop nginx && echo -e '\e[32m >>>> stopped nginx web server....' 
		;;
		(*)
	echo -e "\e[0;40;34m stopping services...\e[0m";
	[[ -a ~/.tepuknyamuk/redis-server-daemon.pid ]] && (sudo kill $(cat ~/.tepuknyamuk/redis-server-daemon.pid) && echo -e '\e[32m >>>> killed redis-server daemon' ) || echo -e '\e[31m ERROR. NO redis server pid file found. \e[0m';
	sudo systemctl stop postgresql && echo -e '\e[32m >>>> stopped postgresql.' 
	forever stopall  && echo -e '\e[32m >>>> stopped appcs daemon...'  &&  echo -e '\e[32m >>>> stopped gms daemon...' 
	sudo systemctl stop nginx && echo -e '\e[32m >>>> stopped nginx web server....' 
    esac
	

# status command
else if [[ $1 == 'status' ]]; then
	echo -e "\e[0;40;34m status...\e[0m";
	echo -e "\e[1;40;37m Running node appservices:\e[0m" | toilet -f term -F border;
	forever list;
	echo -e "\e[1;40;37m Redis @ 6379 ping: \e[0m" | toilet -f term -F border;
	redis-cli ping > /dev/null 2>&1 && REDISSTATUS="PONG" || REDISSTATUS="DOWN";
	if [[ $REDISSTATUS == 'PONG' ]];
	then
		echo -e "\e[36m[PONG] \e[0m"  
	else
		echo -e "\e[1;40;31mDown.\e[0m";
	fi
	echo -e "\e[1;40;37m Postgresql status: \e[0m"| toilet -f term -F border;
	systemctl -n 0 status postgresql |cat;
	echo -e "\e[1;40;37m Nginx status: \e[0m"| toilet -f term -F border;
	systemctl -n 0 status nginx |cat ;
	else
		echo -e "\e[1;101;97mUnrecognized command $1.\e[0m"
		echo -e "$TITLE"
	echo -e "$USAGE";

fi
fi
fi

fi
